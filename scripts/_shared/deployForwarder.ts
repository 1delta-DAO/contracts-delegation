import {ethers} from "hardhat";
import {CallForwarder__factory, DeployFactory__factory} from "../../types";
import {DEPLOY_FACTORY} from "./addresses";
import {keccak256} from "ethers/lib/utils";

/**
export FACTORY="0x16c4Dc0f662E2bEceC91fC5E7aeeC6a25684698A"
export CALLER="0x16c4Dc0f662E2bEceC91fC5E7aeeC6a25684698A"
export INIT_CODE_HASH="0xc2c9ab00fa915409071ea6dc4064f5dbf00112843be430bfb721e57f4c7e3414"
export GPU_DEVICE=255
export ADDRESS_START_WITH="fca11"
export ADDRESS_END_WITH="03"
cargo run --release $FACTORY $CALLER $INIT_CODE_HASH $GPU_DEVICE $ADDRESS_START_WITH $ADDRESS_END_WITH
 */

// 0x16c4dc0f662e2becec91fc5e7aeec6a25684698ad8a8c12ea9f7f4038e82e82e => 0xfCa11d0E353C5c91D62AA5feC05cE39af9393204 (1 / 0)

async function main() {
    const accounts = await ethers.getSigners();
    const operator = accounts[1];
    const chainId = await operator.getChainId();
    console.log("operator", operator.address, "on", chainId);

    const gp = await operator.getGasPrice();

    console.log("gasPrice", gp.toNumber() / 1e9);

    console.log("Get deploy factory");

    const salt = "0x16c4dc0f662e2becec91fc5e7aeec6a25684698ad8a8c12ea9f7f4038e82e82e";
    //  deploys to 0xfCa11d0E353C5c91D62AA5feC05cE39af9393204
    const bytecode =
        "0x6080604052348015600f57600080fd5b506115448061001f6000396000f3fe6080604052600436106100225760003560e01c80636a0c90ff1461002e57600080fd5b3661002957005b600080fd5b61004161003c366004611460565b610043565b005b604460243581013361005681848461005d565b5050505050565b60018201913560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810161009d576100968361012c565b92506100da565b602181036100af57610096838561025d565b604081036100c15761009683856103f8565b609081036100d2576100968361046f565b6100da6104d1565b8183106100e757506100ed565b5061005d565b80821115610127576040517f8129bbcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000813560601c6e22d473030f116ddee9f6b43ac78ba38103610173577fee90c4680000000000000000000000000000000000000000000000000000000060005260046000fd5b6026830192601481013560801c906024013560f01c6f80000000000000000000000000000000821680156101a9574792506101be565b6effffffffffffffffffffffffffffff831692505b506040517f23b872dd0000000000000000000000000000000000000000000000000000000086357fffffffff000000000000000000000000000000000000000000000000000000001603610236577fee90c4680000000000000000000000000000000000000000000000000000000060005260046000fd5b81868237600080838386885af1610251573d6000803e3d6000fd5b50939093019392505050565b600080600080853560601c6e22d473030f116ddee9f6b43ac78ba381036102a8577fee90c4680000000000000000000000000000000000000000000000000000000060005260046000fd5b6026870196601481013560801c906024013560f01c6f80000000000000000000000000000000821680156102de574792506102f3565b6effffffffffffffffffffffffffffff831692505b506040517f23b872dd000000000000000000000000000000000000000000000000000000008a357fffffffff00000000000000000000000000000000000000000000000000000000160361036b577fee90c4680000000000000000000000000000000000000000000000000000000060005260046000fd5b818a8237600080838386885af1965050808901985050505085358060f81c925083158315161561039f573d6000803e3d6000fd5b8060e81c61ffff16915050600386019550826103e65780156103d75760006103c782886114d4565b90506103d486888361005d565b95505b816001036103e157005b6103eb565b948501945b8593505050505b92915050565b60018201916000903560f81c8061041b5761041384846104fb565b9150506103f2565b6001810361042c57610413846105c5565b6003810361043d576104138461077a565b6004810361044f5761041384846108db565b600581036104605761041384610996565b6104686104d1565b5092915050565b60018101906000903560f81c806104905761048983610a56565b9392505050565b600a81036104a15761048983610da8565b601481036104b257610489836110cd565b601e81036104c357610489836110f6565b6104cb6104d1565b50919050565b7f398d4d320000000000000000000000000000000000000000000000000000000060005260046000fd5b6000823560601c601484013560601c602885013560801c80610550577f70a0823100000000000000000000000000000000000000000000000000000000600052846004526020600060246000865afa50506000515b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081528560048201528260248201528160448201526020816064836000885af193503d92506001815114601f84111683151784166105b557826000803e826000fd5b5050506038939093019392505050565b6000813560601c601483013560601c60198401358060801c60ff16816fffffffffffffffffffffffffffffffff16915060008415600081146106895782801561061057849250610645565b47925084831015610645577f7dd37f700000000000000000000000000000000000000000000000000000000060005260046000fd5b5081156106845760008060008085895af1610684577ff4b3b1bc0000000000000000000000000000000000000000000000000000000060005260046000fd5b610769565b82801561069857849250610703565b7f70a08231000000000000000000000000000000000000000000000000000000006000523060045260206000602460008a5afa50600051925084831015610703577f7dd37f700000000000000000000000000000000000000000000000000000000060005260046000fd5b508115610769576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815285600482015282602482015260208160448360008b5af13d6001835114601f821116811517821661076557806000803e806000fd5b5050505b505050603994909401949350505050565b60008135606090811c906014840135901c60198401356effffffffffffffffffffffffffffff81169060801c60ff16848180156107b957839150610824565b7f70a0823100000000000000000000000000000000000000000000000000000000600052306004526020600060246000895afa50600051915083821015610824577f7dd37f700000000000000000000000000000000000000000000000000000000060005260046000fd5b5080156108cb577f2e1a7d4d00000000000000000000000000000000000000000000000000000000600052806004526000806024600080895af161088c577ff4b3b1bc0000000000000000000000000000000000000000000000000000000060005260046000fd5b3084146108cb5760008060008084885af16108cb577ff4b3b1bc0000000000000000000000000000000000000000000000000000000060005260046000fd5b5050506039939093019392505050565b6000823560601c601484013560601c602885013560801c80610930577f70a0823100000000000000000000000000000000000000000000000000000000600052846004526020600060246000865afa50506000515b6040517f36c7851600000000000000000000000000000000000000000000000000000000815285600482015282602482015281604482015283606482015260008060848360006e22d473030f116ddee9f6b43ac78ba35af16105b5573d6000803e3d6000fd5b6000813560601c601483013560601c816000527f1aae13105d9b6581c36534caba5708726e5ea1e03175e823c989a5756966d1f360205260406000206020528060005260406000208054610a48576040517f095ea7b30000000000000000000000000000000000000000000000000000000081528260048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201526020816044836000885af15050600181555b505050602891909101919050565b6000610aa2565b8060005260046000fd5b7f70a0823100000000000000000000000000000000000000000000000000000000600052306004526020600060246000845afa505060005190565b8135606090811c90608584013560f090811c91608786013590911c90850135608090811c7fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffff811691600091607489013590911c9082906f800000000000000000000000000000001647851560018114610b6157828015610b26578588019650610b2a565b8596505b5081861115610b5c57610b5c7f1101129400000000000000000000000000000000000000000000000000000000610a5d565b610bb6565b828015610b75578583039750829650610bb4565b610b7e8b610a67565b975085965082871115610bb457610bb47f1101129400000000000000000000000000000000000000000000000000000000610a5d565b505b505050633b9aca0060708a013560e01c633b9aca0003850204905060405196507fcbef2aa90000000000000000000000000000000000000000000000000000000087526080600488015281602488015260006044880152604c89013560601c6064880152602889013560e01c6084880152602c89013560a48801528360c48801528060e4880152505060e061010486015260009150821560018114610c60578015610c6a57610c9f565b6101209250610c9f565b6020840460208506600080821160018114610c8757839150610c8e565b6001840191505b506001810160200260e00195505050505b50816101248601526000841560018114610ceb576020860460208706600080821160018114610cd057839150610cd7565b6001840191505b506001810160200287019450505050610cf2565b6020840191505b50610144860181905261016486018481528415610d1657848660898b010160208301375b50918501608401848152918415610d3257846089890160208501375b60009250850160849081019088013560f81c1560018114610d655760208252600060208301528660408301039350610d72565b6000825286602083010393505b505081850160405260008083878460148c013560601c5af1610d98573d6000803e3d6000fd5b5050930190920160890192915050565b6000602882013560601c605c83013560801c7fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffff8116906f800000000000000000000000000000001660aa85013560f01c84831560018114610e44578315610e3f5747851115610e3b577f110112940000000000000000000000000000000000000000000000000000000060005260046000fd5b8491505b610e92565b838015610e5657479550859250610e90565b7f70a08231000000000000000000000000000000000000000000000000000000006000523060045260206000602460008a5afa5060005195505b505b50608487013560f881901c935060f01c60ff1683810360006001868414610f695760ff83901d8084180380600c8114610f1557600b8114610f2257600a8114610f2f5760098114610f3c5760088114610f485760078114610f545760068114610f5f5760005b82811015610f0f57600a9390930292600101610ef8565b50610f66565b64e8d4a510009250610f66565b64174876e8009250610f66565b6402540be4009250610f66565b633b9aca009250610f66565b6305f5e1009250610f66565b629896809250610f66565b620f424092505b50505b86841060018114610f8f57633b9aca00607c8d013560e01c81038a028302049250610fb0565b81633b9aca000263ffffffff607c8e013560e01c16633b9aca00038a020492505b505060405195507fad5425c600000000000000000000000000000000000000000000000000000000865260148a013560601c600487015260868a01356024870152876044870152603c8a013560648701528660848701528060a4870152505050608087013560e01c60c4840152600060e48401524261010484015260a687013560e01c6101248401526000610144840152610180610164840152816101848401526000821160018114611087576000806101a486858c3560601c5af161107a573d6000803e3d6000fd5b6101a484016040526110bc565b8260ac89016101a4860137600080846101a40186858c3560601c5af16110b1573d6000803e3d6000fd5b826101c40184016040525b50509490940160ac01949350505050565b60288101906000908035606090811c9160140135901c6110ee828286611204565b949350505050565b6000813560601c6014830135603484013560801c60448501356064860195508115600181036111505747925082611150576111507f669567ea00000000000000000000000000000000000000000000000000000000610a5d565b50468103611181576111817fac6b05f500000000000000000000000000000000000000000000000000000000610a5d565b826111af576111af7f1e4ec46b00000000000000000000000000000000000000000000000000000000610a5d565b6040517fc9630cb000000000000000000000000000000000000000000000000000000000815281600482015283602482015260008060448386895af16111f9573d6000803e3d6000fd5b509495945050505050565b6000604051905081358060f01c8160101b60f01c8260201b60f01c8360301b60f01c8460401b60801c9450601887013560801c47811115611269577f110112940000000000000000000000000000000000000000000000000000000060005260046000fd5b60288801358060581c60ff168160601c9150876000811461128f578860808b01526112cc565b7f70a08231000000000000000000000000000000000000000000000000000000006000523060045260206000602460008f5afa5060005160808b01525b5086895260208901869052604089018590526060890184905260a089019290925260c0880181905260e08089018390527f2147796000000000000000000000000000000000000000000000000000000000610100808b01919091526101048a0182815260808b01516101248c0152601f9889017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09081169283016101448d01819052988a0181169092016101208101610164808e01829052988b018416808301610140016101848f018190526101a48f01979097526101c48e0197909752603d9d909d019c939a5097989297939692909501169092010101906113e8565b60008382018351808252808760208401379590950195945050505050565b6113f4888789846113ca565b9750611405888660208a01846113ca565b9750611416888560408a01846113ca565b9750611427888460608a01846113ca565b9750508061010087010160405260008082610100890160a08a01518d5af1611453573d6000803e3d6000fd5b5094979650505050505050565b6000806020838503121561147357600080fd5b823567ffffffffffffffff81111561148a57600080fd5b8301601f8101851361149b57600080fd5b803567ffffffffffffffff8111156114b257600080fd5b8560208284010111156114c457600080fd5b6020919091019590945092505050565b808201808211156103f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220c49deef5613e69d8ab4929621cbaca5892de834009bf144e7b6cf9722f6fef2164736f6c634300081c0033";

    const initCode = keccak256(bytecode);
    console.log("initCode", initCode); // 0x6d95759de5f9c1ff23720012281168c1b9cdc928be6790a9eb2efdc32bad0980 (paris, 1m steps)

    const deployFactory = await new DeployFactory__factory(operator).attach(DEPLOY_FACTORY);
    const address = await deployFactory.computeAddress(salt, initCode);
    console.log("address", address);
    const estimate = await deployFactory.estimateGas.deploy(salt, bytecode);
    console.log("estimate", estimate);
    const tx = await deployFactory.deploy(salt, bytecode, {gasLimit: estimate.add(100), gasPrice: gp});
    await tx.wait();

    console.log("deployed expected to", address);
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });
