
import { ethers } from "hardhat";
import { DeltaMetaAggregator__factory, DeployFactory__factory } from "../../types";
import { DEPLOY_FACTORY } from "./addresses";
import { keccak256 } from "ethers/lib/utils";

async function main() {
    const accounts = await ethers.getSigners()
    const operator = accounts[0]
    const chainId = await operator.getChainId();
    console.log("operator", operator.address, "on", chainId)

    console.log("Get deploy factory")
    const deployFactory = await new DeployFactory__factory(operator).attach(DEPLOY_FACTORY)

    const salt = "0xad6a484ab655aad350e03095cbc2a6d0f320568c0f050656c4ae543655107129"
    //  deploys to 0xDDDD191F453A387E3D2bB594E657A6D8c8c6D400
    const bytecode ="0x6080604052348015600f57600080fd5b50610fb58061001f6000396000f3fe60806040526004361061002d5760003560e01c806384475995146100395780639239fd171461004e57600080fd5b3661003457005b600080fd5b61004c610047366004610d1e565b610061565b005b61004c61005c366004610d1e565b6102af565b604080516080810182526000918101829052606081019190915273ffffffffffffffffffffffffffffffffffffffff87811682528616602082018190526100a89083610352565b604082015280516100b99033610352565b8160600181815250506000803073ffffffffffffffffffffffffffffffffffffffff16639239fd1760e01b8e8e8e8e8e8e8e8e8e8e6040516024016101079a99989796959493929190610e2a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101909190610ec4565b600060405180830381855af49150503d80600081146101cb576040519150601f19603f3d011682016040523d82523d6000602084013e6101d0565b606091505b50915091508161021c57600080826040517f8f7730bd00000000000000000000000000000000000000000000000000000000815260040161021393929190610ee0565b60405180910390fd5b50508060400151610231826020015184610352565b61023b9190610f3f565b6040820152805161024c9033610352565b816060015161025b9190610f3f565b606082810182905260408084015190517f8f7730bd00000000000000000000000000000000000000000000000000000000815260048101939093526024830152604482015260006064820152608401610213565b73ffffffffffffffffffffffffffffffffffffffff86167f80000000000000000000000000000000000000000000000000000000000000008716811561030a576102fb82878e8e6103b0565b6103058286610872565b610312565b61031261096f565b61031d8a8a866109a0565b6103288a8a86610a5b565b6103328183610a7f565b61033c8784610b72565b610344610ca6565b505050505050505050505050565b60008215600181146103a4577f70a0823100000000000000000000000000000000000000000000000000000000600052826004526020600060246000875afa61039a57600080fd5b60005191506103a9565b823191505b5092915050565b34156103e0577ff6a739020000000000000000000000000000000000000000000000000000000060005260046000fd5b6040518160648114610444576048811461054c5760e081146105fa57610100811461063d57606081146106815761016081146107b3578015610806577f68275857000000000000000000000000000000000000000000000000000000008252600482fd5b7fd505accf000000000000000000000000000000000000000000000000000000008252336004830152306024830152602084013560e01c604485013560208660448601376001820360648501528060ff1c601b01608485015260206024870160a48601377f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660c48401525060008060e484828a5af1806104e8573d6000843e3d83fd5b7f23b872dd00000000000000000000000000000000000000000000000000000000835233600484015285604484015260208360648560008b5af190503d6001845114602082101516811517821691508161054557806000853e8084fd5b505061086a565b7f8fcbaf0c000000000000000000000000000000000000000000000000000000008252336004830152306024830152600484013560e01c6028850135853560e01c6044850152600182036064850152600160848501528060ff1c601b0160a485015260206008870160c48601377f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660e48401525060008061010484828a5af1806104e8573d6000843e3d83fd5b7fd505accf0000000000000000000000000000000000000000000000000000000082528284600484013760008060e48460008a5af1806104e8573d6000843e3d83fd5b7f8fcbaf0c000000000000000000000000000000000000000000000000000000008252828460048401376000806101048460008a5af1806104e8573d6000843e3d83fd5b7f2b67b57000000000000000000000000000000000000000000000000000000000825233600483015285602483015260148460508401376001601485013560e01c0365ffffffffffff166064830152601884013560e01c60848301523060a48301526001601c85013560e01c0365ffffffffffff1660c483015261010060e4830152604061010483015260208085016101248401376020604085016101448401376000806101648460006e22d473030f116ddee9f6b43ac78ba35af161074b573d6000803e3d6000fd5b7f36c7851600000000000000000000000000000000000000000000000000000000825233600483015230602483015284604483015285606483015260008060848460006e22d473030f116ddee9f6b43ac78ba35af16107ae573d6000803e3d6000fd5b61086a565b7f2b67b570000000000000000000000000000000000000000000000000000000008252828460048401376000806101648460006e22d473030f116ddee9f6b43ac78ba35af161074b573d6000803e3d6000fd5b7f23b872dd00000000000000000000000000000000000000000000000000000000825233600483015230602483015284604483015260208260648460008a5af13d6001845114602082101516811517821691508161086757806000853e8084fd5b50505b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152602081815260408083209385168352929052205460ff1661096b576040517f095ea7b30000000000000000000000000000000000000000000000000000000081528160048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248201526020816044836000875af161091057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff80831660009081526020818152604080832093851683529290522080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b5050565b3461099e577f07270ad50000000000000000000000000000000000000000000000000000000060005260046000fd5b565b82357fffffffff00000000000000000000000000000000000000000000000000000000167f23b872dd000000000000000000000000000000000000000000000000000000008103610a15577fee68db590000000000000000000000000000000000000000000000000000000060005260046000fd5b506e22d473030f116ddee9f6b43ac78ba38103610a56577fee68db590000000000000000000000000000000000000000000000000000000060005260046000fd5b505050565b60405182848237600080848334865af1610a79573d6000803e3d6000fd5b50505050565b811561096b57801560018114610b33577f70a0823100000000000000000000000000000000000000000000000000000000600052306004526020600060246000855afa506000518015610a79576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201528160248201526020816044836000885af13d60018351146020821015168115178216915081610b2a57806000843e8083fd5b50505050505050565b478015610a795760008060008084335af1610a79577ff4b3b1bc0000000000000000000000000000000000000000000000000000000060005260046000fd5b817f8000000000000000000000000000000000000000000000000000000000000000161561096b578173ffffffffffffffffffffffffffffffffffffffff16801560018114610c60577f70a0823100000000000000000000000000000000000000000000000000000000600052306004526020600060246000855afa506000518015610c5a576040517fa9059cbb0000000000000000000000000000000000000000000000000000000081528460048201528160248201526020816044836000885af13d60018351146020821015168115178216915081610c5657806000843e8083fd5b5050505b50610a79565b478015610c9f5760008060008084885af1610c9f577ff4b3b1bc0000000000000000000000000000000000000000000000000000000060005260046000fd5b5050505050565b600080a0565b60008083601f840112610cbe57600080fd5b50813567ffffffffffffffff811115610cd657600080fd5b602083019150836020828501011115610cee57600080fd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d1957600080fd5b919050565b6000806000806000806000806000806101008b8d031215610d3e57600080fd5b8a3567ffffffffffffffff811115610d5557600080fd5b610d618d828e01610cac565b909b5099505060208b013567ffffffffffffffff811115610d8157600080fd5b610d8d8d828e01610cac565b90995097505060408b0135955060608b0135945060808b01359350610db460a08c01610cf5565b9250610dc260c08c01610cf5565b9150610dd060e08c01610cf5565b90509295989b9194979a5092959850565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b61010081526000610e4061010083018c8e610de1565b8281036020840152610e53818b8d610de1565b604084019990995250506060810195909552608085019390935273ffffffffffffffffffffffffffffffffffffffff91821660a0850152811660c08401521660e090910152949350505050565b60005b83811015610ebb578181015183820152602001610ea3565b50506000910152565b60008251610ed6818460208701610ea0565b9190910192915050565b8381528260208201526060604082015260008251806060840152610f0b816080850160208701610ea0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b81810381811115610f79577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea2646970667358221220d305bd2548f6eb7d567b8c5fe4c728353eec21ce3277bd007662f36911985dd164736f6c634300081c0033"// await new DeltaMetaAggregator__factory(operator).bytecode

    const initCode = keccak256(bytecode)
    console.log("initCode", initCode) // 0xe677ed9859bfe2e1a4f4306d6d04b99e578512e8e754b1a66ec6917aaf0d0f54 (paris, 1m steps)
    const address = await deployFactory.computeAddress(salt, initCode)
    const estimate = await deployFactory.estimateGas.deploy(salt, bytecode)
    console.log("estimate", estimate)
    const tx = await deployFactory.deploy(salt, bytecode, { gasLimit: estimate.add(100) })
    await tx.wait()

    console.log("deployed expected to", address)
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });
