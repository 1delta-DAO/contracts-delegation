// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.19;

import "./DeltaSetup.f.sol";

contract AavePermitTestPolygon is DeltaSetup {
    function setUp() public virtual override {
        vm.createSelectFork({blockNumber: 60825008, urlOrAlias: "https://polygon.api.onfinality.io/public"});
        address admin = 0x999999833d965c275A2C102a4Ebf222ca938546f;
        address proxy = 0x6A6faa54B9238f0F079C8e6CBa08a7b9776C7fE4;
        address oldModule = 0x5F82874a9e2bf4509FcE3b845a3862897eff276a;
        upgradeExistingDelta(proxy, admin, oldModule);
    }

    // skipt this one for now
    function test_cswap_permit_polygon() external 
    /**
     * address user, uint8 lenderId
     */
    {
        address user = 0x91ae002a960e63Ccb0E5bDE83A8C13E51e1cB91A;
        vm.expectRevert();
        vm.prank(user);
        IFlashAggregator(brokerProxyAddress).deltaCompose(getCollateralSwapWithPermit());
    }

    // skipt this one for now
    function test_dswap_permit_polygon() external 
    /**
     * address user, uint8 lenderId
     */
    {
        address user = 0x91ae002a960e63Ccb0E5bDE83A8C13E51e1cB91A;
        vm.expectRevert();
        vm.prank(user);
        IFlashAggregator(brokerProxyAddress).deltaCompose(getDebtSwapWithpermit());
    }

    function getCollateralSwapWithPermit() internal pure returns (bytes memory data) {
        // this data is correct for bloclk 59909525
        data =
            hex"32078f358208685046a11c85e8ad32895ded33a24900e000000000000000000000000091ae002a960e63ccb0e5bde83a8c13e51e1cb91a0000000000000000000000006a6faa54b9238f0f079c8e6cba08a7b9776c7fe4000000000000000000000000000000000000000000000000000000000001c0db0000000000000000000000000000000000000000000000000000000066c4c04d000000000000000000000000000000000000000000000000000000000000001cee0f1afa1226f7f07558ef1cb8c22079480dec911ecf60ce505d8907691435a453c7babb3fdca39e8be30d709cef3c75fda3741d25a1d184396db19a3abdae9802000000000000000000583aa0cfbc8f58000000000000000000000000000000421bfd67037b42cf73acf2047067bd4f2c47d9bfd6030050eaedb835021e4a108b7290636d62e9765cc6d701f47ceb23fd6bc0add59e62ac25578270cff1b9f6190003";
    }

    function getDebtSwapWithpermit() internal pure returns (bytes memory data) {
        data =
            hex"33fccf3cabbe80101232d343252614b6a3ee81c98900e000000000000000000000000091ae002a960e63ccb0e5bde83a8c13e51e1cb91a0000000000000000000000006a6faa54b9238f0f079c8e6cba08a7b9776c7fe400000000000000000000000000000000000000000000000000000000031792e80000000000000000000000000000000000000000000000000000000066c4c0df000000000000000000000000000000000000000000000000000000000000001c338915c90454a714e59b1d9c6412bead93ccd34895b6736ca2d4cc7fb25cf38d2da38e54c095255ccbbaa1e96ecf85b2540cb2913a457078d6295244311317240300000000000000000000000000758a19000000000000e47c21ecd50c8aeb00420d500b1d8e8ef31e21c99d1db9a6444d3adf127002688a4ceb4dffa238539c5d62ce424980e8fdb21ebc26f82791bca1f2de4661ed88a30c99a7a9449aa84174000203000000000000000000000000002732d20000000000004c2960a447042e4e00420d500b1d8e8ef31e21c99d1db9a6444d3adf1270027860c088234180b36edcec7aa8aa23912bb6bed114270b2791bca1f2de4661ed88a30c99a7a9449aa84174000203000000000000000000000000002730c40000000000004c2960a447042e4e00420d500b1d8e8ef31e21c99d1db9a6444d3adf1270026b8312a29a91d9fac706f4d2adeb1fa4540fad167326fc2791bca1f2de4661ed88a30c99a7a9449aa8417400020300000000000000000000000002249cf90000000000042a4348fbe23a884b006e0d500b1d8e8ef31e21c99d1db9a6444d3adf127002036baead5db7fee6d5c9f0ca07bb5038c4cd279f5cd70c8f3cf7ad23cd3cadbd9735aff958023239c6a0630003e7e0eb9f6bcccfe847fdf62a3628319a092f11a2f0772791bca1f2de4661ed88a30c99a7a9449aa84174000203000000000000000000000000002731e1000000000000000000000000000000420d500b1d8e8ef31e21c99d1db9a6444d3adf1270020221988c9cfd08db3b5793c2c6782271dc9474925101f42791bca1f2de4661ed88a30c99a7a9449aa841740002";
    }
}
